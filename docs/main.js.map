{"version":3,"sources":["./src/app/components/available-buses/available-buses.component.html","./src/app/components/available-buses/available-buses.component.ts","./src/app/components/select-seats/select-seats.component.ts","./src/app/components/select-seats/select-seats.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/journey-summary/journey-summary.component.html","./src/app/components/journey-summary/journey-summary.component.ts","./src/app/components/passenger-info/passenger-info.component.ts","./src/app/components/passenger-info/passenger-info.component.html","./src/app/app.module.ts","./src/app/services/ticket-generate.service.ts","./src/app/pipes/seatname.pipe.ts","./src/app/services/seat-booking.service.ts","./src/app/components/view-ticket/view-ticket.component.html","./src/app/components/view-ticket/view-ticket.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-center\">\n      <ng-container *ngIf=\"availableBuses;else endpointsmissing\">\n        <div class=\"col-sm-12\">\n            <button class=\"btn btn-primary\" (click)='navigateBack()'>Back</button>\n        </div>\n        <div class=\"col-lg-4 d-none d-lg-block\">\n          <img class=\"img img-fluid\" src=\"assets/travelmode.svg\" alt=\"Journey Image\">\n        </div>\n        <div class=\"col col-lg-8 col-sm-12\" *ngIf=\"availableBuses.length; else busesUnavailable\">\n          <div class=\"row justify-content-center\"><p class=\"lead\">Available buses</p></div>\n          <table class=\"table table-bordered\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th scope=\"col\" *ngFor=\"let key of keys\">{{key}}</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let bus of availableBuses\">\n                  <td *ngFor=\"let key of keys\">{{bus[key]}}</td>\n                  <td>\n                    <button type=\"button\" [routerLink]='[\"/buses\",bus.id]' class=\"btn btn-light viewseats\">View Seats</button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n        </div>\n            <ng-template #busesUnavailable>\n              <h4>\n                  Sorry! No buses are currently available running on this route.\n              </h4>\n          </ng-template>\n      </ng-container>\n      <ng-template #endpointsmissing>\n        <div class=\"col\">\n          <div class=\"alert alert-warning\" role=\"alert\">\n            You have not selected your journey endpoints.\n            Go to home page to plan your journey and find buses.\n          </div>\n          <a class=\"btn btn-primary\" routerLink=\"\" role=\"button\">Plan journey</a>\n        </div>\n    </ng-template>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {SeatBookingService } from '../../services/seat-booking.service';\nimport { Bus } from '../../interfaces/bus';\nimport { Location } from '@angular/common'\n\n@Component({\n  selector: 'app-available-buses',\n  templateUrl: './available-buses.component.html',\n  styleUrls: ['./available-buses.component.css']\n})\nexport class AvailableBusesComponent implements OnInit {\n\n  availableBuses:Bus[] | undefined = undefined;\n  keys = [\"Bus Name\",\"Departure Time\", \"Coach Type\",\"Seats Available\",\"Fare\"];\n  constructor(private bookingService: SeatBookingService,\n              private location: Location) { }\n\n  ngOnInit(): void {\n    this.availableBuses = this.bookingService.getFilteredBuses();\n  }\n\n  navigateBack(){\n    this.location.back();\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Bus } from 'src/app/interfaces/bus';\nimport { SeatBookingService } from '../../services/seat-booking.service';\nimport { FormControl, FormGroup, Validators, FormArray} from \"@angular/forms\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-select-seats',\n  templateUrl: './select-seats.component.html',\n  styleUrls: ['./select-seats.component.css']\n})\nexport class SelectSeatsComponent implements OnInit {\n\n  busId: any;\n  busDetails : Bus | undefined;\n  journey:any;\n  seatStatus: boolean[] = new Array(36).fill(false);\n  form:FormGroup = new FormGroup({\n    seats:  new FormArray([])\n  });\n  selectedSeats: number[]=[];\n  submitted: boolean = false;\n\n  constructor(private route: ActivatedRoute,\n    private bookingService: SeatBookingService,\n    private router: Router) { }\n\n  get seats() {\n    return this.form.get('seats') as FormArray;\n  }\n\n  submit(){\n    console.log(this.form);\n    this.submitted=true;\n    if(this.selectedSeats.length){\n        //@ts-ignore\n        var fare = this.busDetails['Fare'] * this.selectedSeats.length;\n        this.bookingService.setJourneyFare(this.busId,fare,this.selectedSeats);\n        this.router.navigate(['passengerInfo']);\n    }\n    else\n      return;\n  }\n\n  ngOnInit(): void {\n      this.journey=this.bookingService.getJourneyObject();\n      if(typeof(this.journey)=='undefined')\n          this.router.navigate(['']);\n      else{\n          this.route.paramMap.subscribe((params: ParamMap)=>{\n              this.busId= params.get('id');\n              this.busDetails = this.bookingService.getBusById(this.busId);\n              if(!this.busDetails){\n                  this.router.navigate(['']);\n                  return;\n              }\n              var seatStatus = this.busDetails.bookings[this.journey.departureDate]\n              if(seatStatus)\n                  this.seatStatus = seatStatus;\n          });\n          this.seatStatus.forEach(() => {\n              this.seats.push(new FormControl(false))\n          });\n          // @ts-ignore\n          this.form.get('seats').valueChanges.subscribe(selectedValue => {\n              this.selectedSeats=[];\n              for(var i = 0; i < 36; i++){\n                if(selectedValue[i])\n                    this.selectedSeats.push(i);            \n              }\n        })\n      }  \n  };\n}","\n\n<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-center\" *ngIf=\"busDetails\">\n        <div class=\"col col-lg-4 col-md-6 col-sm-12 bus\" placement=\"right\" ngbTooltip=\"Click on seat icons to select seats\">\n            <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n                <p class=\"lead\">Select Seats</p>\n                <hr>\n                <ng-container formArrayName=\"seats\">\n                    <ng-container *ngFor=\"let _ of seats.controls; index as i\">\n                    <label class=\"seatCheckbox\" [id]=\"i\" >\n                    <input \n                        [formControlName]=\"i\" type=\"checkbox\" [id]=\"i\"\n                        [attr.disabled]=\"seatStatus[i] ? true : null\"/>\n                        <span></span>\n                    </label>\n                    <br *ngIf=\"i%4==3\">\n                    </ng-container>\n                </ng-container>\n            </form>\n        </div>\n        <div class=\"col col-lg-5 offset-lg-1 col-md-6 col-sm-12\">\n            <div class=\"row seatstable\">\n                <ng-container *ngIf=\"selectedSeats.length;else noseaterror\">\n                    <h1>Selected seats</h1>\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">Seats</th>\n                            <th scope=\"col\">Fare</th>\n                            <th scope=\"col\">Coach</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let i of selectedSeats\">\n                            <td>{{i | seatname}}</td>\n                            <td>{{busDetails['Fare'] | currency: 'INR'}}</td>\n                            <td>{{busDetails['Coach Type']}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n                <ng-template #noseaterror>\n                        <div class=\"alert alert-danger\" *ngIf=\"submitted\" role=\"alert\">\n                            *You must select atleast one seat before proceeding.\n                        </div>\n                        <img src=\"assets/nodata.svg\" class=\"img img-fluid\" *ngIf=\"!submitted\">\n                </ng-template>\n            </div>\n            <div class=\"row total\">\n                <h4>Total : {{selectedSeats.length * busDetails['Fare'] | currency: 'INR'}}</h4>\n            </div>\n            <div class=\"row justify-content-center\">\n                <button class=\"btn btn-primary btn-block\" type=\"submit\" (click)=\"submit()\"> Confirm </button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=''>MyTrip.com</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\"routerLink=''>Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n      </ul>\n    </div>\n</nav>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SeatBookingService } from '../../services/seat-booking.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  journeyInfo: FormGroup = this.formBuilder.group({});\r\n  submitted : boolean = false;\r\n  sourceCities: string[] = []\r\n  destinationCities: string[] =[]\r\n  \r\n  constructor(private formBuilder: FormBuilder,\r\n              private bookingService: SeatBookingService,\r\n              private router: Router) { \r\n  }\r\n \r\n  ngOnInit(): void {\r\n    this.sourceCities = this.bookingService.getSourceCities();\r\n    this.destinationCities = this.bookingService.getDestinationCities();\r\n    this.journeyInfo = this.formBuilder.group({\r\n      sourceLocation: ['',Validators.required],\r\n      destination: ['',Validators.required],\r\n      departureDate: ['',Validators.required]\r\n    },{\r\n      validators: [this.validJourney('sourceLocation', 'destination'),\r\n                    this.validDate('departureDate')]\r\n    });\r\n  }\r\n\r\n  get formControl() {\r\n    return this.journeyInfo.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted=true;\r\n    console.log(this.journeyInfo.value);\r\n    if(this.journeyInfo.invalid)\r\n      return;\r\n    this.bookingService.setJourneyEndpoints(this.journeyInfo.value);\r\n    this.router.navigate(['availablebuses']);\r\n  }\r\n\r\n  validJourney(src: string, dst: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const source = formGroup.controls[src];\r\n      const destination = formGroup.controls[dst];\r\n      if (destination.value!=\"\" && source.value === destination.value){  \r\n          destination.setErrors(\r\n            {invalidJourney: true}\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  validDate(date: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const dateControl = formGroup.controls[date];\r\n      const journeydate=new Date(dateControl.value);\r\n      const currentdate = new Date()\r\n      currentdate.setHours(0,0,0,0);\r\n      if (journeydate.getTime() <  currentdate.getTime()){  \r\n          dateControl.setErrors({\r\n            oldDate:true\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col  d-none d-lg-block\">\n            <img class=\"img img-fluid\" src=\"assets/planjourney.svg\" alt=\"Journey Image\">\n        </div>\n        <div class=\"col col-lg-6 col-md-10 col-sm-12\">\n            <div class=\"card\">\n                <h5 class=\"card-header\">Plan Journey</h5>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"journeyInfo\" (ngSubmit)=\"onSubmit()\">\n                        \n                        <div *ngIf=\"submitted && formControl.destination.errors?.invalidJourney\" class=\"alert alert-danger\">\n                            Source and destination can not be same.\n                        </div>\n\n                        <div class=\"form-row\">\n                            <div class=\"form-group col\">\n                                <label for=\"sourceLocation\">Leaving From</label>\n                                <select class=\"form-control\" id=\"sourceLocation\" name=\"sourceLocation\" formControlName=\"sourceLocation\">\n                                    <option *ngFor='let city of sourceCities' [value]=\"city\">{{city}}</option>\n                                </select>\n                                <div *ngIf=\"formControl.sourceLocation.invalid && (formControl.sourceLocation.dirty || formControl.sourceLocation.touched || submitted)\" class=\"text-danger\">\n                                    <small *ngIf=\"formControl.sourceLocation.errors?.required\">Source Location is required</small>\n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group col\">\n                                <label for=\"destination\">Going To</label>\n                                <select class=\"form-control\" id=\"destination\" name=\"destination\" formControlName=\"destination\">\n                                    <option *ngFor='let city of destinationCities' [value]='city'>{{city}}</option>\n                                </select>\n                                <div *ngIf=\"formControl.destination.invalid && (formControl.destination.dirty || formControl.destination.touched || submitted)\" class=\"text-danger\">\n                                    <small *ngIf=\"formControl.destination.errors?.required\">Destination Location is required</small>\n                                </div>\n                            </div>                    \n                        </div>\n                        <div class=\"form-row justify-content-center\">\n                            <div class=\"form-group col-8\">\n                                <label for=\"depatureDate\">Departure Date</label>\n                                <input class=\"form-control\" id=\"departureDate\" name=\"departureDate\" type=\"date\" formControlName=\"departureDate\">\n                                <div *ngIf=\"formControl.departureDate.invalid && (formControl.departureDate.dirty || formControl.departureDate.touched || submitted)\" class=\"text-danger\">\n                                    <small *ngIf=\"formControl.departureDate.errors?.required\">Journey date is required</small>\n                                    <small *ngIf=\"formControl.departureDate.errors?.oldDate\">Journey date is Invalid.(Do not enter old date)</small>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row justify-content-center\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Search Buses</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-sm-8\">\n            <img src=\"assets//notfound.svg\" class=\"img-fluid\" alt=\"Page Not found Image\">\n        </div>\n        <div class=\"col-sm-8\">\n            <p class=\"lead\"> *The page you are requesting can not be found.</p>\n            <a routerLink=\"\">Go back to home</a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer-dark fixed-bottom\">\n    <footer>\n        <div class=\"container\">\n            <p class=\"copyright\">Mytrip.com © 2021</p>\n        </div>\n    </footer>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'mytrip-busTicketing';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-center\" *ngIf=\"ticket\">\n        <div class=\"col lg-5 d-none d-lg-block\">\n          <img class=\"img img-fluid\" src=\"assets/travelers.svg\" alt=\"Journey Image\">\n        </div>\n        <div class=\"col col-lg-6 col-md-8 col-sm-12\" >\n            <div class=\"card bg-light mb-3\" >\n                <div class=\"card-header\">Journey Details</div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{ticket['Source']}} To  {{ticket['Destination']}}</h5>\n                  <p class=\"card-text\">Date & Time : {{ticket['Date'] | date: 'mediumDate'}} |  {{ticket['Departure Time']}}</p>\n                  <p class=\"card-text\">{{ticket['Bus Name']}}</p>\n                  <p class=\"card-text\">Coach Type : {{ticket['Coach Type']}}</p>\n                  <p class=\"card-text\">Seats No (\n                    <span *ngFor=\"let seat of ticket['Seat No']\">\n                      {{seat}},\n                    </span>\n                    )\n                  </p>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-info\" [routerLink]=\"['../../viewticket',ticket['id']]\">Proceed to view Ticket</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Ticket } from '../../interfaces/ticket';\nimport { TicketGenerateService } from '../../services/ticket-generate.service';\n\n@Component({\n  selector: 'app-journey-summary',\n  templateUrl: './journey-summary.component.html',\n  styleUrls: ['./journey-summary.component.css']\n})\nexport class JourneySummaryComponent implements OnInit {\n\n  ticketId: any;\n  ticket: Ticket | undefined;\n\n  constructor(private route: ActivatedRoute,\n              private ticketService:TicketGenerateService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      this.ticketId = params.get('id');\n      this.ticket = this.ticketService.getTicketById(this.ticketId);\n      if(!this.ticket){\n          this.router.navigate(['/notfound']);\n      }\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SeatBookingService } from '../../services/seat-booking.service';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-passenger-info',\n  templateUrl: './passenger-info.component.html',\n  styleUrls: ['./passenger-info.component.css']\n})\n\nexport class PassengerInfoComponent implements OnInit {\n  passengerInfo: FormGroup = this.formBuilder.group({});\n  submitted : boolean = false;\n  journey: any;\n\n  constructor(private formBuilder: FormBuilder,\n    private bookingService: SeatBookingService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.journey = this.bookingService.getJourneyObject();\n    if(!this.journey){\n      this.router.navigate(['']);\n    }\n    else{\n    this.passengerInfo = this.formBuilder.group({\n      username: ['',[Validators.required,Validators.minLength(3),Validators.maxLength(20)]],\n      mobilenumber: ['',[Validators.required,Validators.pattern('[0-9]{10}')]],\n      email: ['',[Validators.required, Validators.email]]\n    });}\n  }\n\n  get formControl() {\n    return this.passengerInfo.controls;\n  }\n  \n  onFormSubmit() {\n    this.submitted = true;\n    if (this.passengerInfo.invalid)\n        return;\n    console.log(this.passengerInfo.value);\n    this.bookingService.setPassengerInfo(this.passengerInfo.value);\n    var ticketID = this.bookingService.confirmBooking();\n    this.router.navigate(['/journeyDetails',ticketID]);\n  }\n\n}\n","<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-md-center\" *ngIf=\"journey\">\n        <div class=\"col lg-5 d-none d-lg-block\">\n            <img class=\"img img-fluid\" src=\"assets/passengerInfo.svg\" alt=\"Journey Image\">\n        </div>\n        <div class=\"col col-lg-7 col-md-8 col-sm-12\">\n            <div class=\"card\">\n                <h5 class=\"card-header\">Passenger Details</h5>\n                <div class=\"card-body\">\n            <form [formGroup]=\"passengerInfo\" (ngSubmit)=\"onFormSubmit()\">\n\n                <div class=\"form-group row\">\n                    <label for=\"username\" class=\"col-sm-3 col-form-label\">User Name</label>\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" formControlName=\"username\">\n                        <div *ngIf=\"formControl.username.invalid && (formControl.username.dirty || formControl.username.touched || submitted)\" class=\"text-danger\">\n                            <small *ngIf=\"formControl.username.errors?.required\">User Name is required</small>\n                            <small *ngIf=\"formControl.username.errors?.minlength\">User Name must be atleast 3 characters long.</small>\n                            <small *ngIf=\"formControl.username.errors?.maxlength\">User Name can not have more than 20 characters</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">   \n                    <label for=\"mobilenumber\" class=\"col-sm-3 col-form-label\">Mobile Number</label>\n                    <div class=\"col\">\n                        <input type=\"tel\"class=\"form-control\" id=\"mobilenumber\" name=\"mobilenumber\" formControlName=\"mobilenumber\">\n                        <div *ngIf=\"formControl.mobilenumber.invalid && (formControl.mobilenumber.dirty || formControl.mobilenumber.touched || submitted)\" class=\"text-danger\">\n                            <small *ngIf=\"formControl.mobilenumber.errors?.required\">Phone number is required.</small>\n                            <small *ngIf=\"formControl.mobilenumber.errors?.pattern\">Phone number is invalid.(Must consist of exactly 10 digits)</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"email\" class=\"col-sm-3 col-form-label\">Email</label>\n                    <div class=\"col\">\n                        <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" formControlName=\"email\">\n                        <div *ngIf=\"formControl.email.invalid && (formControl.email.dirty || formControl.email.touched || submitted)\" class=\"text-danger\">\n                            <small *ngIf=\"formControl.email.errors?.required\">Email is required.</small>\n                            <small *ngIf=\"formControl.email.errors?.email\">Email is not valid.</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row justify-content-center\">\n                <button class=\"btn btn-primary\" type=\"submit\" >Submit</button>\n                </div>\n            </form>\n        </div>\n        </div>\n    \n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SeatBookingService } from './services/seat-booking.service';\nimport { TicketGenerateService } from './services/ticket-generate.service';\nimport { SeatNamePipe } from './pipes/seatname.pipe';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AvailableBusesComponent } from './components/available-buses/available-buses.component';\nimport { SelectSeatsComponent } from './components/select-seats/select-seats.component';\nimport { PassengerInfoComponent } from './components/passenger-info/passenger-info.component';\nimport { JourneySummaryComponent } from './components/journey-summary/journey-summary.component';\nimport { ViewTicketComponent } from './components/view-ticket/view-ticket.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    AvailableBusesComponent,\n    SelectSeatsComponent,\n    PassengerInfoComponent,\n    JourneySummaryComponent,\n    ViewTicketComponent,\n    SeatNamePipe,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    ReactiveFormsModule\n  ],\n  providers: [SeatBookingService,TicketGenerateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Ticket } from '../interfaces/ticket';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketGenerateService {\n\n  tickets: Ticket[] = [];\n  constructor() { }\n\n  generateTicket(journey:any,bus:any){\n        var newTicket:Ticket = {\n          \"id\": Date.now(),\n          \"Bus Name\": bus['Bus Name'],\n          \"Date\": journey[\"departureDate\"],\n          \"Departure Time\":bus['Departure Time'],\n          \"Source\":journey[\"sourceLocation\"],\n          \"Destination\":journey[\"destination\"],\n          \"Coach Type\":bus['Coach Type'],\n          \"Total Fare\":journey[\"fare\"],\n          \"Seat No\": this.convertSeatNumber(journey['selectedSeats']),\n          \"Passenger Details\":journey[\"passenger\"]\n        };\n        this.tickets.push(newTicket);\n        console.log(newTicket);\n        return newTicket.id;\n  }\n\n  getTicketById(id:any){\n    return this.tickets.find((ticket)=>{\n        return ticket.id == id;\n    })\n  }\n\n  convertSeatNumber(seatNumbers:number[]){\n      var seatNames = [];\n      for( var num of seatNumbers){\n          var name = String.fromCharCode(65+Math.floor(num/4));\n          name=name+(1+num%4)\n          seatNames.push(name);\n      }\n      return seatNames;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'seatname'})\r\nexport class SeatNamePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    var name = String.fromCharCode(65+Math.floor(value/4));\r\n    name = name+(1+value%4);\r\n    return name;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport * as data from \"../../assets/buses.json\";\nimport { Bus } from '../interfaces/bus';\nimport { TicketGenerateService } from './ticket-generate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeatBookingService {\n\n  journey: any;\n  buses: Bus[] = (data  as  any).default;\n  constructor(private ticketService: TicketGenerateService) {\n  }\n\n  getFilteredBuses(){\n      if(this.journey){\n        return this.buses.filter((bus)=>{\n          return (bus['Source'] == this.journey.sourceLocation && bus['Destination'] == this.journey.destination);\n        });\n      }\n      else\n        return undefined;\n  }\n\n  getJourneyObject(){\n    return this.journey;\n  }\n\n  getBusById(id:any){\n      return this.buses.find((bus)=>{\n          return bus.id == id;\n      })\n  }\n\n  setJourneyEndpoints(journey:any){\n      this.journey=journey;\n  }\n  \n  setJourneyFare(busId:number,fare:number,selectedSeats:number[]){\n    this.journey.fare = fare;\n    this.journey.busId = busId;\n    this.journey.selectedSeats = selectedSeats;\n    console.log(this.journey);\n  }\n\n  setPassengerInfo(passenger:object){\n    this.journey.passenger = passenger;\n  }\n\n  confirmBooking(){\n    this.updateBusInfo();\n    return this.ticketService.generateTicket(this.journey,this.getBusById(this.journey.busId));\n  }\n\n  updateBusInfo(){\n    const busIndex = this.buses.findIndex(element => element.id == this.journey.busId )\n    if(this.buses[busIndex].bookings[this.journey.departureDate])\n        var bookedStatus = [...this.buses[busIndex].bookings[this.journey.departureDate]];\n    else\n        var bookedStatus = new Array(36).fill(false);\n    for( var i of this.journey.selectedSeats){\n      bookedStatus[i]=true;\n    }\n    this.buses[busIndex].bookings[this.journey.departureDate]=bookedStatus;\n  }\n\n  getSourceCities(){\n    return [...new Set(this.buses.map(bus=>bus.Source))]\n  }\n\n  getDestinationCities(){\n    return [...new Set(this.buses.map(bus=>bus['Destination']))]\n  }\n}","<div class=\"container parentcontainer\">\n    <div class=\"row justify-content-center\" *ngIf=\"ticket\">\n        <div class=\"col col-lg-8 col-md-10 col-sm-12 ticket\">\n                <div class=\"row heading my-2\">\n                    <div class=\"col\">Online Reservation</div>\n                </div>\n                <div class=\"row route my-2 mx-1 py-2\"> \n                    <div class=\"col\">\n                        <h5 class=\"endpoints\">{{ticket['Source']}} {{ticket['Destination']}}</h5>\n                    </div>\n                    <div class=\"col\">\n                        <h5>{{ticket['Date'] | date: 'mediumDate'}}</h5>\n                    </div>\n                </div>\n                <div class=\"row my-3 mx-1 passenger pt-2\">\n                    <div class=\"col-md-4 col-sm-6\">\n                        <h5>Passenger Details</h5>\n                        <h6 class=\"passengername\">{{ticket['Passenger Details']['username']}}</h6>\n                        <p>{{ticket['Passenger Details']['mobilenumber']}} <br>{{ticket['Passenger Details']['email']}}</p>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-6\">\n                        <h5>Ticket Id</h5>\n                        <p>{{ticket['id']}}</p>\n                    </div>\n\n                    <div class=\"col-md-2 col-sm-6\">\n                        <h5>Seat No</h5>\n                        <p><span *ngFor=\"let seat of ticket['Seat No']\">\n                            {{seat}} \n                          </span></p>\n                    </div>\n\n                    <div class=\"col-md-2 col-sm-6\">\n                        <h5>Total Fare</h5>\n                        <p>{{ticket['Total Fare'] | currency: 'INR'}}</p>\n                    </div>\n\n                </div>\n\n                <div class=\"row my-3 mx-1 passenger pt-2\">\n                    <div class=\"col-md-4 col-sm-6\">\n                        <h5>Bus Name</h5>\n                        <p>{{ticket['Bus Name']}} <br> {{ticket['Coach Type']}}</p>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-6\">\n                        <h5>Reporting Time</h5>\n                        <p>Before 30 minutes</p>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-6\">\n                        <h5>Departure Time</h5>\n                        <p>{{ticket['Departure Time']}}</p>\n                    </div>\n                </div>\n        </div>\n    </div>\n    <div class=\"row my-3\">\n        <div class=\"mx-auto condition\">**Please bring this copy to ticket counter for collecting your ticket</div>\n    </div>\n    <div class=\"row my-3\">\n        <div class=\"mx-auto\">\n            <button class=\"btn btn-primary\" routerLink=\"\">Book more tickets</button>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Ticket } from '../../interfaces/ticket';\nimport { TicketGenerateService } from '../../services/ticket-generate.service';\n\n@Component({\n  selector: 'app-view-ticket',\n  templateUrl: './view-ticket.component.html',\n  styleUrls: ['./view-ticket.component.css']\n})\nexport class ViewTicketComponent implements OnInit {\n\n  ticketId: any;\n  ticket: Ticket | undefined;\n\n  constructor(private route: ActivatedRoute,\n              private ticketService:TicketGenerateService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      this.ticketId = params.get('id');\n      this.ticket = this.ticketService.getTicketById(this.ticketId);\n      if(!this.ticket)\n          this.router.navigate(['notfound']);\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { AvailableBusesComponent } from './components/available-buses/available-buses.component';\nimport { SelectSeatsComponent } from './components/select-seats/select-seats.component';\nimport { PassengerInfoComponent } from './components/passenger-info/passenger-info.component';\nimport { JourneySummaryComponent } from './components/journey-summary/journey-summary.component';\nimport { ViewTicketComponent } from './components/view-ticket/view-ticket.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  {path:'',component: HomeComponent},\n  {path:'availablebuses',component: AvailableBusesComponent},\n  {path:'buses/:id',component: SelectSeatsComponent},\n  {path:'passengerInfo', component: PassengerInfoComponent},\n  {path: 'journeyDetails/:id', component: JourneySummaryComponent},\n  {path: 'viewticket/:id', component: ViewTicketComponent},\n  {path: 'notfound', component: NotFoundComponent},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}